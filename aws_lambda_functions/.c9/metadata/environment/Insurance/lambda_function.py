{"filter":false,"title":"lambda_function.py","tooltip":"/Insurance/lambda_function.py","undoManager":{"mark":20,"position":20,"stack":[[{"start":{"row":85,"column":3},"end":{"row":96,"column":25},"action":"remove","lines":[" prompt_out = prompt if PROMPT_PREVIEW_LEN <= 0 else prompt[:PROMPT_PREVIEW_LEN] + \"…\"","    # print(answer)","","    raw = answer[\"body\"]            # or wherever you stored the raw Lambda reply","    outer = json.loads(raw)        # step 1: now outer is a dict","","    body_str = outer[\"body\"]       # still a JSON-encoded string","    inner = json.loads(body_str)   # step 2: decode inner JSON","","    final_answer = inner[\"answer\"] # <-- this is what you want","    print(final_answer)","            # 5. Response"],"id":3},{"start":{"row":85,"column":3},"end":{"row":98,"column":34},"action":"insert","lines":["raw_reply = ask_llm(prompt)          # ← returns one string, e.g. '{\"answer\":\"…\"}'","","# --- 4. Extract the answer safely -----------------------------------","try:","    # normal path: the model followed the rules","    final_answer = json.loads(raw_reply)[\"answer\"]","","except (json.JSONDecodeError, KeyError):","    # model added extra text → grab the last {...}","    brace = raw_reply.rfind(\"{\")","    if brace != -1:","        final_answer = json.loads(raw_reply[brace:]).get(\"answer\", raw_reply)","    else:","        final_answer = raw_reply  "]}],[{"start":{"row":87,"column":0},"end":{"row":87,"column":4},"action":"insert","lines":["    "],"id":4},{"start":{"row":88,"column":0},"end":{"row":88,"column":4},"action":"insert","lines":["    "]},{"start":{"row":89,"column":0},"end":{"row":89,"column":4},"action":"insert","lines":["    "]},{"start":{"row":90,"column":0},"end":{"row":90,"column":4},"action":"insert","lines":["    "]},{"start":{"row":91,"column":0},"end":{"row":91,"column":4},"action":"insert","lines":["    "]},{"start":{"row":92,"column":0},"end":{"row":92,"column":4},"action":"insert","lines":["    "]},{"start":{"row":93,"column":0},"end":{"row":93,"column":4},"action":"insert","lines":["    "]},{"start":{"row":94,"column":0},"end":{"row":94,"column":4},"action":"insert","lines":["    "]},{"start":{"row":95,"column":0},"end":{"row":95,"column":4},"action":"insert","lines":["    "]},{"start":{"row":96,"column":0},"end":{"row":96,"column":4},"action":"insert","lines":["    "]},{"start":{"row":97,"column":0},"end":{"row":97,"column":4},"action":"insert","lines":["    "]},{"start":{"row":98,"column":0},"end":{"row":98,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":85,"column":15},"end":{"row":85,"column":22},"action":"remove","lines":["ask_llm"],"id":5},{"start":{"row":85,"column":15},"end":{"row":85,"column":24},"action":"insert","lines":["query_llm"]}],[{"start":{"row":82,"column":4},"end":{"row":82,"column":6},"action":"insert","lines":["# "],"id":6}],[{"start":{"row":108,"column":23},"end":{"row":108,"column":29},"action":"remove","lines":["answer"],"id":7},{"start":{"row":108,"column":23},"end":{"row":108,"column":35},"action":"insert","lines":["final_answer"]}],[{"start":{"row":91,"column":0},"end":{"row":91,"column":4},"action":"remove","lines":["    "],"id":8},{"start":{"row":98,"column":36},"end":{"row":98,"column":38},"action":"remove","lines":["  "]}],[{"start":{"row":85,"column":3},"end":{"row":85,"column":4},"action":"insert","lines":[" "],"id":9}],[{"start":{"row":85,"column":4},"end":{"row":98,"column":36},"action":"remove","lines":["raw_reply = query_llm(prompt)          # ← returns one string, e.g. '{\"answer\":\"…\"}'","","    # --- 4. Extract the answer safely -----------------------------------","    try:","        # normal path: the model followed the rules","        final_answer = json.loads(raw_reply)[\"answer\"]","","    except (json.JSONDecodeError, KeyError):","        # model added extra text → grab the last {...}","        brace = raw_reply.rfind(\"{\")","        if brace != -1:","            final_answer = json.loads(raw_reply[brace:]).get(\"answer\", raw_reply)","        else:","            final_answer = raw_reply"],"id":10},{"start":{"row":85,"column":4},"end":{"row":98,"column":33},"action":"insert","lines":["raw_reply = ask_llm(prompt)          # ← returns one string, e.g. '{\"answer\":\"…\"}'","","# --- 4. Extract the answer safely -----------------------------------","try:","    # normal path: the model followed the rules","    final_answer = json.loads(raw_reply)[\"answer\"]","","except (json.JSONDecodeError, KeyError):","    # model added extra text → grab the last {...}","    brace = raw_reply.rfind(\"{\")","    if brace != -1:","        final_answer = json.loads(raw_reply[brace:]).get(\"answer\", raw_reply)","    else:","        final_answer = raw_reply "]}],[{"start":{"row":87,"column":0},"end":{"row":87,"column":4},"action":"insert","lines":["    "],"id":11},{"start":{"row":88,"column":0},"end":{"row":88,"column":4},"action":"insert","lines":["    "]},{"start":{"row":89,"column":0},"end":{"row":89,"column":4},"action":"insert","lines":["    "]},{"start":{"row":90,"column":0},"end":{"row":90,"column":4},"action":"insert","lines":["    "]},{"start":{"row":91,"column":0},"end":{"row":91,"column":4},"action":"insert","lines":["    "]},{"start":{"row":92,"column":0},"end":{"row":92,"column":4},"action":"insert","lines":["    "]},{"start":{"row":93,"column":0},"end":{"row":93,"column":4},"action":"insert","lines":["    "]},{"start":{"row":94,"column":0},"end":{"row":94,"column":4},"action":"insert","lines":["    "]},{"start":{"row":95,"column":0},"end":{"row":95,"column":4},"action":"insert","lines":["    "]},{"start":{"row":96,"column":0},"end":{"row":96,"column":4},"action":"insert","lines":["    "]},{"start":{"row":97,"column":0},"end":{"row":97,"column":4},"action":"insert","lines":["    "]},{"start":{"row":98,"column":0},"end":{"row":98,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":85,"column":15},"end":{"row":85,"column":16},"action":"remove","lines":[" "],"id":14}],[{"start":{"row":85,"column":15},"end":{"row":85,"column":16},"action":"remove","lines":["a"],"id":15},{"start":{"row":85,"column":15},"end":{"row":85,"column":16},"action":"remove","lines":["s"]},{"start":{"row":85,"column":15},"end":{"row":85,"column":16},"action":"remove","lines":["k"]},{"start":{"row":85,"column":15},"end":{"row":85,"column":16},"action":"remove","lines":["_"]},{"start":{"row":85,"column":15},"end":{"row":85,"column":16},"action":"remove","lines":["l"]},{"start":{"row":85,"column":15},"end":{"row":85,"column":16},"action":"remove","lines":["l"]},{"start":{"row":85,"column":15},"end":{"row":85,"column":16},"action":"remove","lines":["m"]}],[{"start":{"row":85,"column":15},"end":{"row":85,"column":24},"action":"insert","lines":["query_llm"],"id":16}],[{"start":{"row":91,"column":0},"end":{"row":91,"column":4},"action":"remove","lines":["    "],"id":17},{"start":{"row":98,"column":36},"end":{"row":98,"column":37},"action":"remove","lines":[" "]}],[{"start":{"row":107,"column":12},"end":{"row":107,"column":14},"action":"insert","lines":["# "],"id":18}],[{"start":{"row":106,"column":16},"end":{"row":107,"column":0},"action":"insert","lines":["",""],"id":20},{"start":{"row":107,"column":0},"end":{"row":107,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":106,"column":16},"end":{"row":106,"column":28},"action":"insert","lines":["final_answer"],"id":21}],[{"start":{"row":107,"column":8},"end":{"row":107,"column":10},"action":"insert","lines":["# "],"id":22},{"start":{"row":108,"column":8},"end":{"row":108,"column":10},"action":"insert","lines":["# "]},{"start":{"row":109,"column":8},"end":{"row":109,"column":10},"action":"insert","lines":["# "]},{"start":{"row":110,"column":8},"end":{"row":110,"column":10},"action":"insert","lines":["# "]}],[{"start":{"row":106,"column":16},"end":{"row":106,"column":28},"action":"remove","lines":["final_answer"],"id":23}],[{"start":{"row":107,"column":8},"end":{"row":107,"column":10},"action":"remove","lines":["# "],"id":24},{"start":{"row":108,"column":8},"end":{"row":108,"column":10},"action":"remove","lines":["# "]},{"start":{"row":109,"column":8},"end":{"row":109,"column":10},"action":"remove","lines":["# "]},{"start":{"row":110,"column":8},"end":{"row":110,"column":10},"action":"remove","lines":["# "]}],[{"start":{"row":108,"column":12},"end":{"row":108,"column":14},"action":"remove","lines":["# "],"id":25}],[{"start":{"row":106,"column":15},"end":{"row":106,"column":16},"action":"remove","lines":[" "],"id":26}]]},"ace":{"folds":[],"scrolltop":420.10691267092676,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":112,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":31,"state":"fqqstring3","mode":"ace/mode/python"}},"timestamp":1750260480755,"hash":"083b2733f61e4e513cb362489d85d39f4ddb1d06"}